version: '3.3'

services:
  # ----------------------------------------------------------------
  # Python
  # ----------------------------------------------------------------
#  python:
#    build:
#      context: .
#      dockerfile: docker/python/Dockerfile
#    container_name: 'python'
#    stdin_open: true
#    tty: true
#    volumes:
#      - ./:/app


  # ----------------------------------------------------------------
  # PyTorch
  # ----------------------------------------------------------------
  # pytorch_111:
  #   build:
  #     context: .
  #     dockerfile: docker/pytorch/Dockerfile.111
  #   container_name: 'nvidia-docker_111'
  #   stdin_open: true
  #   tty: true
  #   volumes:
  #     - ./:/app

  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  
  pytorch_171:
    build:
      context: .
      dockerfile: docker/pytorch/Dockerfile.171
    container_name: 'pytorch1.13_cuda171'
    stdin_open: true
    tty: true
    volumes:
      - ./:/app

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  

  # pytorch_171_2:
  #   build:
  #     context: .
  #     dockerfile: docker/pytorch/Dockerfile.171.2
  #   container_name: 'nvidia-docker_171_2'
  #   stdin_open: true
  #   tty: true
  #   volumes:
  #     - ./:/app

  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]

  # ----------------------------------------------------------------
  # AtCoder
  # ----------------------------------------------------------------
  # atcoder:
  #   build:
  #     context: .
  #     dockerfile: docker/atcoder/Dockerfile
  #   container_name: atcoder
  #   stdin_open: true
  #   tty: true
  #   volumes:
  #     - ./:/app

  # ----------------------------------------------------------------
  # Django + React + Postgres
  # ----------------------------------------------------------------
  # django:
  #   build:
  #     context: .
  #     dockerfile: docker/django/Dockerfile
  #   tty: true
  #   volumes:
  #     - ./src/django/backend:/app
  #   ports:
  #     - 8000:8000
  #   depends_on:
  #     - postgres
  #   env_file:
  #     - .env.dev
  #   entrypoint: /usr/local/bin/entrypoint.sh

  # postgres:
  #   image: postgres:15.2
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   env_file:
  #     - .env.dev

  # pgadmin4:
  #   image: dpage/pgadmin4
  #   ports:
  #     - 8888:80
  #   volumes:
  #     - pgadmin4_data:/var/lib/pgadmin
  #   depends_on:
  #     - postgres
  #   env_file:
  #     - .env.dev
    
  # react:
  #   build:
  #     context: .
  #     dockerfile: docker/react/Dockerfile
  #   tty: true
  #   volumes:
  #     - ./src/django/frontend:/app
  #   ports:
  #     - 5173:5173
  #   command: sh -c "npm install && npm run dev"

volumes:
  postgres_data:
  pgadmin4_data:
